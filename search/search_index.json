{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"UBI COPEC API","text":"<ul> <li> <p> Gu\u00eda de Uso</p> <p>Aprende a instalar, configurar y usar la API.</p> <p> Empezar</p> </li> <li> <p> API</p> <p>Explora los modelos, rutas y esquemas de la API.</p> <p> Documentaci\u00f3n API</p> </li> <li> <p> Desarrollo</p> <p>Contribuye al proyecto y conoce nuestros est\u00e1ndares.</p> <p> Gu\u00eda del desarrollador</p> </li> <li> <p> Acerca de</p> <p>Licencia y registro de cambios.</p> <p> M\u00e1s informaci\u00f3n</p> </li> </ul>"},{"location":"#objetivo-general","title":"\ud83c\udfaf Objetivo General","text":"<p>UBI COPEC API es una interfaz de programaci\u00f3n de aplicaciones (API) RESTful que proporciona acceso p\u00fablico a informaci\u00f3n georreferenciada de las ubicaciones de COPEC en Chile. Este proyecto nace con el objetivo de facilitar el acceso a datos estructurados sobre estaciones de servicio, tiendas Pronto, servicios automotrices y otros puntos de inter\u00e9s relacionados con COPEC.</p>"},{"location":"#que-ofrece","title":"\ud83c\udf81 \u00bfQu\u00e9 ofrece?","text":"<ul> <li>Datos Georreferenciados: Acceso a coordenadas precisas de ubicaciones COPEC</li> <li>API REST Moderna: Desarrollada con FastAPI, garantizando alto rendimiento</li> <li>Documentaci\u00f3n Completa: Gu\u00edas detalladas y ejemplos de uso</li> <li>C\u00f3digo Abierto: 100% open source bajo licencia Apache 2.0</li> </ul>"},{"location":"#a-quien-va-dirigido","title":"\ud83d\udc65 \u00bfA qui\u00e9n va dirigido?","text":"<p>Esta API est\u00e1 dise\u00f1ada para:</p> <ul> <li>Desarrolladores que necesiten integrar datos de ubicaciones COPEC en sus aplicaciones</li> <li>Investigadores que requieran datos geogr\u00e1ficos del sector energ\u00e9tico</li> <li>Empresas que deseen analizar la distribuci\u00f3n de servicios COPEC</li> <li>Estudiantes interesados en aprender sobre APIs RESTful y geolocalizaci\u00f3n</li> </ul>"},{"location":"#primeros-pasos","title":"\ud83d\ude80 Primeros Pasos","text":"<pre><code># Clonar el repositorio\ngit clone https://github.com/tu-usuario/UBI-COPEC.git\n\n# Instalar dependencias\npip install -r requirements.txt\n\n# Iniciar el servidor de desarrollo\nuvicorn app.main:app --reload\n</code></pre>"},{"location":"#ejemplo-de-uso","title":"\ud83d\udcca Ejemplo de Uso","text":"<pre><code>import requests\n\n# Obtener todas las estaciones Pronto\nresponse = requests.get(\"http://localhost:8000/places/prontos\")\nprontos = response.json()\n\n# Imprimir nombres y ubicaciones\nfor pronto in prontos:\n    print(f\"{pronto['name']}: {pronto['latitude']}, {pronto['longitude']}\")\n</code></pre>"},{"location":"#contribuir-al-proyecto","title":"\ud83e\udd1d Contribuir al Proyecto","text":"<p>\u00a1Tus contribuciones son bienvenidas! Puedes ayudar:</p> <ul> <li>Reportando bugs</li> <li>Sugiriendo nuevas funcionalidades</li> <li>Mejorando la documentaci\u00f3n</li> <li>Escribiendo c\u00f3digo</li> </ul> <p>Consulta nuestra gu\u00eda de contribuci\u00f3n para m\u00e1s detalles.</p>"},{"location":"#licencia","title":"\ud83d\udcdc Licencia","text":"<p>Este proyecto est\u00e1 bajo la licencia Apache 2.0. Consulta el archivo LICENSE para m\u00e1s detalles.</p>"},{"location":"about/changelog/","title":"Registro de Cambios","text":"<p>Todos los cambios notables en este proyecto ser\u00e1n documentados en este archivo.</p> <p>El formato est\u00e1 basado en Keep a Changelog, y este proyecto adhiere a Semantic Versioning.</p>"},{"location":"about/changelog/#100-2024-05-29","title":"1.0.0 - 2024-05-29","text":""},{"location":"about/changelog/#anadido","title":"A\u00f1adido","text":"<ul> <li>API REST b\u00e1sica con FastAPI</li> <li>Endpoints para consultar ubicaciones COPEC</li> <li>Base de datos SQLite con modelos b\u00e1sicos</li> <li>Script de datos de ejemplo</li> <li>Documentaci\u00f3n inicial con MkDocs</li> <li>Configuraci\u00f3n de GitHub Actions para CI</li> <li>Licencia Apache 2.0</li> </ul>"},{"location":"about/changelog/#cambios","title":"Cambios","text":"<ul> <li>Primera versi\u00f3n estable del proyecto</li> </ul>"},{"location":"about/changelog/#correcciones","title":"Correcciones","text":"<ul> <li>N/A</li> </ul>"},{"location":"about/changelog/#010-2024-05-15","title":"0.1.0 - 2024-05-15","text":""},{"location":"about/changelog/#anadido_1","title":"A\u00f1adido","text":"<ul> <li>Estructura inicial del proyecto</li> <li>Configuraci\u00f3n b\u00e1sica de FastAPI</li> <li>Modelos de datos preliminares</li> <li>Documentaci\u00f3n b\u00e1sica</li> </ul>"},{"location":"about/licencia/","title":"Licencia","text":""},{"location":"about/licencia/#apache-license-20","title":"Apache License 2.0","text":"<p>UBI COPEC API est\u00e1 licenciado bajo la Apache License 2.0.</p>"},{"location":"about/licencia/#terminos-principales","title":"T\u00e9rminos Principales","text":"<ol> <li>Permiso de Uso: Puedes usar el c\u00f3digo para cualquier prop\u00f3sito</li> <li>Permiso de Modificaci\u00f3n: Puedes modificar el c\u00f3digo</li> <li>Permiso de Distribuci\u00f3n: Puedes distribuir el c\u00f3digo</li> <li>Permiso de Sublicenciar: Puedes sublicenciar el c\u00f3digo</li> <li>Sin Garant\u00eda: El c\u00f3digo se proporciona \"tal cual\"</li> </ol>"},{"location":"about/licencia/#condiciones","title":"Condiciones","text":"<ol> <li>Aviso de Licencia: Debes incluir una copia de la licencia</li> <li>Aviso de Cambios: Debes indicar cambios significativos</li> <li>Atribuci\u00f3n: Debes mantener los avisos de copyright</li> </ol>"},{"location":"about/licencia/#limitaciones","title":"Limitaciones","text":"<ol> <li>Marcas Registradas: No otorga derechos sobre marcas registradas</li> <li>Garant\u00edas: No provee garant\u00edas de ning\u00fan tipo</li> <li>Responsabilidad: Los autores no son responsables por da\u00f1os</li> </ol>"},{"location":"about/licencia/#ejemplo-de-atribucion","title":"Ejemplo de Atribuci\u00f3n","text":"<pre><code>Copyright 2024 UBI COPEC API Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n</code></pre>"},{"location":"about/licencia/#preguntas-frecuentes","title":"Preguntas Frecuentes","text":""},{"location":"about/licencia/#puedo-usar-este-codigo-en-un-proyecto-comercial","title":"\u00bfPuedo usar este c\u00f3digo en un proyecto comercial?","text":"<p>S\u00ed, la licencia Apache 2.0 permite el uso comercial.</p>"},{"location":"about/licencia/#debo-hacer-publico-mi-codigo-si-uso-este-proyecto","title":"\u00bfDebo hacer p\u00fablico mi c\u00f3digo si uso este proyecto?","text":"<p>No, no es necesario hacer p\u00fablico tu c\u00f3digo.</p>"},{"location":"about/licencia/#debo-mencionar-que-uso-este-proyecto","title":"\u00bfDebo mencionar que uso este proyecto?","text":"<p>S\u00ed, debes mantener los avisos de copyright y licencia.</p>"},{"location":"about/licencia/#puedo-modificar-el-codigo","title":"\u00bfPuedo modificar el c\u00f3digo?","text":"<p>S\u00ed, pero debes indicar los cambios significativos realizados.</p>"},{"location":"api/esquemas/","title":"Esquemas de la API","text":"<p>Los esquemas definen la estructura de los datos que la API acepta y retorna. Est\u00e1n implementados usando Pydantic para validaci\u00f3n y serializaci\u00f3n.</p>"},{"location":"api/esquemas/#esquemas-base","title":"Esquemas Base","text":""},{"location":"api/esquemas/#ubicacionbase","title":"UbicacionBase","text":"<p>El esquema base define los campos comunes para todas las operaciones con ubicaciones.</p> <pre><code>class UbicacionBase(BaseModel):\n    name: str\n    description: Optional[str] = None\n    type: str\n    latitude: float\n    longitude: float\n</code></pre>"},{"location":"api/esquemas/#validaciones","title":"Validaciones","text":"<ul> <li><code>name</code>: String no vac\u00edo</li> <li><code>description</code>: String opcional</li> <li><code>type</code>: Debe ser uno de los valores definidos en <code>UbicacionType</code></li> <li><code>latitude</code>: Float entre -90 y 90</li> <li><code>longitude</code>: Float entre -180 y 180</li> </ul>"},{"location":"api/esquemas/#esquemas-de-operacion","title":"Esquemas de Operaci\u00f3n","text":""},{"location":"api/esquemas/#ubicacioncreate","title":"UbicacionCreate","text":"<p>Usado para crear nuevas ubicaciones.</p> <pre><code>class UbicacionCreate(UbicacionBase):\n    pass\n</code></pre>"},{"location":"api/esquemas/#ubicacion","title":"Ubicacion","text":"<p>Esquema completo que incluye el ID, usado para respuestas.</p> <pre><code>class Ubicacion(UbicacionBase):\n    id: UUID\n\n    class Config:\n        orm_mode = True\n</code></pre>"},{"location":"api/esquemas/#enumeraciones","title":"Enumeraciones","text":""},{"location":"api/esquemas/#ubicaciontype","title":"UbicacionType","text":"<p>Define los tipos v\u00e1lidos de ubicaciones.</p> <pre><code>class UbicacionType(str, Enum):\n    PRONTO = \"pronto\"\n    BENCINERA = \"bencinera\"\n    SERVICIO = \"servicio\"\n    OTRO = \"otro\"\n</code></pre>"},{"location":"api/esquemas/#ejemplos","title":"Ejemplos","text":""},{"location":"api/esquemas/#crear-ubicacion","title":"Crear Ubicaci\u00f3n","text":"<p>Request Body: <pre><code>{\n  \"name\": \"Pronto Las Condes\",\n  \"description\": \"Estaci\u00f3n con servicios 24/7\",\n  \"type\": \"pronto\",\n  \"latitude\": -33.4122,\n  \"longitude\": -70.5823\n}\n</code></pre></p>"},{"location":"api/esquemas/#respuesta-ubicacion","title":"Respuesta Ubicaci\u00f3n","text":"<pre><code>{\n  \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"name\": \"Pronto Las Condes\",\n  \"description\": \"Estaci\u00f3n con servicios 24/7\",\n  \"type\": \"pronto\",\n  \"latitude\": -33.4122,\n  \"longitude\": -70.5823\n}\n</code></pre>"},{"location":"api/esquemas/#validaciones-y-errores","title":"Validaciones y Errores","text":""},{"location":"api/esquemas/#errores-de-validacion","title":"Errores de Validaci\u00f3n","text":"<ol> <li> <p>Tipo Inv\u00e1lido <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\"body\", \"type\"],\n      \"msg\": \"value is not a valid enumeration member\",\n      \"type\": \"type_error.enum\"\n    }\n  ]\n}\n</code></pre></p> </li> <li> <p>Coordenadas Inv\u00e1lidas <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\"body\", \"latitude\"],\n      \"msg\": \"ensure this value is less than or equal to 90\",\n      \"type\": \"value_error.number.not_le\"\n    }\n  ]\n}\n</code></pre></p> </li> </ol>"},{"location":"api/esquemas/#conversion-de-tipos","title":"Conversi\u00f3n de Tipos","text":"<p>Los esquemas manejan autom\u00e1ticamente la conversi\u00f3n entre: - Strings UUID \u2194 UUID objects - Strings de fecha/hora \u2194 datetime objects - Strings de enumeraci\u00f3n \u2194 Enum members</p>"},{"location":"api/esquemas/#uso-con-fastapi","title":"Uso con FastAPI","text":"<pre><code>@router.post(\"/\", response_model=schemas.Ubicacion)\ndef create_ubicacion(\n    ubicacion: schemas.UbicacionCreate,\n    db: Session = Depends(get_db)\n):\n    db_ubicacion = models.Ubicacion(**ubicacion.dict())\n    db.add(db_ubicacion)\n    db.commit()\n    db.refresh(db_ubicacion)\n    return db_ubicacion\n</code></pre>"},{"location":"api/modelos/","title":"Modelos de la API","text":""},{"location":"api/modelos/#modelo-base-de-datos","title":"Modelo Base de Datos","text":""},{"location":"api/modelos/#ubicacion","title":"Ubicacion","text":"<p>El modelo principal de la aplicaci\u00f3n es <code>Ubicacion</code>, que representa una ubicaci\u00f3n f\u00edsica de COPEC.</p> <pre><code>class Ubicacion(Base):\n    __tablename__ = \"ubicacion\"\n\n    id = Column(UUID, primary_key=True, index=True)\n    name = Column(String, nullable=False)\n    description = Column(Text, nullable=True)\n    type = Column(String, nullable=False)\n    latitude = Column(Float, nullable=False)\n    longitude = Column(Float, nullable=False)\n</code></pre>"},{"location":"api/modelos/#campos","title":"Campos","text":"<ul> <li><code>id</code>: Identificador \u00fanico UUID</li> <li><code>name</code>: Nombre de la ubicaci\u00f3n</li> <li><code>description</code>: Descripci\u00f3n detallada (opcional)</li> <li><code>type</code>: Tipo de ubicaci\u00f3n (PRONTO, BENCINERA, SERVICIO, OTRO)</li> <li><code>latitude</code>: Latitud geogr\u00e1fica</li> <li><code>longitude</code>: Longitud geogr\u00e1fica</li> </ul>"},{"location":"api/modelos/#schemas-pydantic","title":"Schemas Pydantic","text":""},{"location":"api/modelos/#ubicacionbase","title":"UbicacionBase","text":"<p>Schema base que define los campos comunes:</p> <pre><code>class UbicacionBase(BaseModel):\n    name: str\n    description: Optional[str] = None\n    type: str\n    latitude: float\n    longitude: float\n</code></pre>"},{"location":"api/modelos/#ubicacioncreate","title":"UbicacionCreate","text":"<p>Schema usado para crear nuevas ubicaciones:</p> <pre><code>class UbicacionCreate(UbicacionBase):\n    pass\n</code></pre>"},{"location":"api/modelos/#ubicacion_1","title":"Ubicacion","text":"<p>Schema completo que incluye el ID:</p> <pre><code>class Ubicacion(UbicacionBase):\n    id: UUID\n\n    class Config:\n        orm_mode = True\n</code></pre>"},{"location":"api/modelos/#enumeraciones","title":"Enumeraciones","text":""},{"location":"api/modelos/#ubicaciontype","title":"UbicacionType","text":"<p>Define los tipos v\u00e1lidos de ubicaciones:</p> <pre><code>class UbicacionType(str, Enum):\n    PRONTO = \"pronto\"\n    BENCINERA = \"bencinera\"\n    SERVICIO = \"servicio\"\n    OTRO = \"otro\"\n</code></pre>"},{"location":"api/modelos/#validaciones","title":"Validaciones","text":"<p>Los modelos incluyen las siguientes validaciones:</p> <ol> <li>Coordenadas Geogr\u00e1ficas</li> <li>Latitud: entre -90 y 90</li> <li> <p>Longitud: entre -180 y 180</p> </li> <li> <p>Tipos de Ubicaci\u00f3n</p> </li> <li> <p>Solo se permiten los valores definidos en <code>UbicacionType</code></p> </li> <li> <p>Campos Requeridos</p> </li> <li><code>name</code></li> <li><code>type</code></li> <li><code>latitude</code></li> <li><code>longitude</code></li> </ol>"},{"location":"api/modelos/#ejemplos-de-uso","title":"Ejemplos de Uso","text":""},{"location":"api/modelos/#crear-una-nueva-ubicacion","title":"Crear una Nueva Ubicaci\u00f3n","text":"<pre><code>nueva_ubicacion = Ubicacion(\n    id=uuid.uuid4(),\n    name=\"Pronto Las Condes\",\n    description=\"Estaci\u00f3n con servicios 24/7\",\n    type=UbicacionType.PRONTO,\n    latitude=-33.4122,\n    longitude=-70.5823\n)\n</code></pre>"},{"location":"api/modelos/#consultar-ubicaciones-por-tipo","title":"Consultar Ubicaciones por Tipo","text":"<pre><code>ubicaciones_pronto = db.query(Ubicacion).filter(\n    Ubicacion.type == UbicacionType.PRONTO\n).all()\n</code></pre>"},{"location":"api/rutas/","title":"Rutas de la API","text":""},{"location":"api/rutas/#estructura-base","title":"Estructura Base","text":"<p>Todas las rutas est\u00e1n montadas bajo el prefijo <code>/ubicaciones/</code>.</p>"},{"location":"api/rutas/#endpoints-detallados","title":"Endpoints Detallados","text":""},{"location":"api/rutas/#get-ubicaciones","title":"GET /ubicaciones/","text":"<p>Retorna todas las ubicaciones disponibles en la base de datos.</p> <pre><code>@router.get(\"/\", response_model=List[schemas.Ubicacion])\ndef get_ubicaciones(\n    skip: int = 0,\n    limit: int = 100,\n    db: Session = Depends(get_db)\n):\n    \"\"\"\n    Obtiene todas las ubicaciones con paginaci\u00f3n opcional.\n    \"\"\"\n</code></pre>"},{"location":"api/rutas/#parametros-query","title":"Par\u00e1metros Query","text":"<ul> <li><code>skip</code> (opcional): N\u00famero de registros a saltar</li> <li><code>limit</code> (opcional): N\u00famero m\u00e1ximo de registros a retornar</li> </ul>"},{"location":"api/rutas/#respuesta","title":"Respuesta","text":"<pre><code>[\n  {\n    \"id\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"name\": \"Pronto Las Condes\",\n    \"description\": \"Estaci\u00f3n con servicios 24/7\",\n    \"type\": \"pronto\",\n    \"latitude\": -33.4122,\n    \"longitude\": -70.5823\n  }\n]\n</code></pre>"},{"location":"api/rutas/#get-ubicacionesprontos","title":"GET /ubicaciones/prontos/","text":"<p>Retorna todas las ubicaciones de tipo Pronto.</p> <pre><code>@router.get(\"/prontos/\", response_model=List[schemas.Ubicacion])\ndef get_prontos(\n    skip: int = 0,\n    limit: int = 100,\n    db: Session = Depends(get_db)\n):\n    \"\"\"\n    Obtiene todas las ubicaciones tipo Pronto.\n    \"\"\"\n</code></pre>"},{"location":"api/rutas/#get-ubicacionesbencineras","title":"GET /ubicaciones/bencineras/","text":"<p>Retorna todas las ubicaciones de tipo Bencinera.</p> <pre><code>@router.get(\"/bencineras/\", response_model=List[schemas.Ubicacion])\ndef get_bencineras(\n    skip: int = 0,\n    limit: int = 100,\n    db: Session = Depends(get_db)\n):\n    \"\"\"\n    Obtiene todas las ubicaciones tipo Bencinera.\n    \"\"\"\n</code></pre>"},{"location":"api/rutas/#get-ubicacionesservicios","title":"GET /ubicaciones/servicios/","text":"<p>Retorna todas las ubicaciones de tipo Servicio.</p> <pre><code>@router.get(\"/servicios/\", response_model=List[schemas.Ubicacion])\ndef get_servicios(\n    skip: int = 0,\n    limit: int = 100,\n    db: Session = Depends(get_db)\n):\n    \"\"\"\n    Obtiene todas las ubicaciones tipo Servicio.\n    \"\"\"\n</code></pre>"},{"location":"api/rutas/#get-ubicacionesotros","title":"GET /ubicaciones/otros/","text":"<p>Retorna todas las ubicaciones de tipo Otro.</p> <pre><code>@router.get(\"/otros/\", response_model=List[schemas.Ubicacion])\ndef get_otros(\n    skip: int = 0,\n    limit: int = 100,\n    db: Session = Depends(get_db)\n):\n    \"\"\"\n    Obtiene todas las ubicaciones tipo Otro.\n    \"\"\"\n</code></pre>"},{"location":"api/rutas/#manejo-de-errores","title":"Manejo de Errores","text":""},{"location":"api/rutas/#no-encontrado-404","title":"No Encontrado (404)","text":"<p>Cuando no se encuentran ubicaciones del tipo solicitado:</p> <pre><code>{\n  \"detail\": \"No se encontraron ubicaciones de tipo {tipo}\"\n}\n</code></pre>"},{"location":"api/rutas/#error-de-validacion-422","title":"Error de Validaci\u00f3n (422)","text":"<p>Cuando los par\u00e1metros de query no son v\u00e1lidos:</p> <pre><code>{\n  \"detail\": [\n    {\n      \"loc\": [\"query\", \"limit\"],\n      \"msg\": \"ensure this value is greater than 0\",\n      \"type\": \"value_error.number.not_gt\"\n    }\n  ]\n}\n</code></pre>"},{"location":"api/rutas/#ejemplos-de-uso","title":"Ejemplos de Uso","text":""},{"location":"api/rutas/#curl","title":"Curl","text":"<pre><code># Obtener todas las ubicaciones\ncurl http://localhost:8000/ubicaciones/\n\n# Obtener Prontos con paginaci\u00f3n\ncurl http://localhost:8000/ubicaciones/prontos/?skip=0&amp;limit=10\n\n# Obtener Bencineras\ncurl http://localhost:8000/ubicaciones/bencineras/\n</code></pre>"},{"location":"api/rutas/#python-requests","title":"Python Requests","text":"<pre><code>import requests\n\n# Obtener todas las ubicaciones\nresponse = requests.get(\"http://localhost:8000/ubicaciones/\")\nubicaciones = response.json()\n\n# Obtener Prontos con paginaci\u00f3n\nresponse = requests.get(\n    \"http://localhost:8000/ubicaciones/prontos/\",\n    params={\"skip\": 0, \"limit\": 10}\n)\nprontos = response.json()\n</code></pre>"},{"location":"desarrollo/contribuir/","title":"Gu\u00eda de Contribuci\u00f3n","text":""},{"location":"desarrollo/contribuir/#como-contribuir","title":"\ud83e\udd1d \u00bfC\u00f3mo Contribuir?","text":"<p>\u00a1Gracias por tu inter\u00e9s en contribuir a UBI COPEC API! Este proyecto es open source y todas las contribuciones son bienvenidas.</p>"},{"location":"desarrollo/contribuir/#proceso-de-contribucion","title":"\ud83d\udcdd Proceso de Contribuci\u00f3n","text":"<ol> <li>Fork el Repositorio</li> <li>Visita el repositorio en GitHub</li> <li> <p>Haz click en el bot\u00f3n \"Fork\"</p> </li> <li> <p>Clona tu Fork <pre><code>git clone https://github.com/TU-USERNAME/UBI-COPEC.git\ncd UBI-COPEC\n</code></pre></p> </li> <li> <p>Crea una Rama <pre><code>git checkout -b feature/tu-feature\n</code></pre></p> </li> <li> <p>Realiza tus Cambios</p> </li> <li>Escribe c\u00f3digo limpio y mantenible</li> <li>Sigue las convenciones de estilo del proyecto</li> <li>A\u00f1ade tests si es necesario</li> <li> <p>Actualiza la documentaci\u00f3n si es necesario</p> </li> <li> <p>Commit tus Cambios <pre><code>git add .\ngit commit -m \"feat: descripci\u00f3n de tus cambios\"\n</code></pre>    Usamos Conventional Commits:</p> </li> <li><code>feat:</code> para nuevas caracter\u00edsticas</li> <li><code>fix:</code> para correcciones de bugs</li> <li><code>docs:</code> para cambios en documentaci\u00f3n</li> <li><code>test:</code> para a\u00f1adir o modificar tests</li> <li> <p><code>refactor:</code> para refactorizaci\u00f3n de c\u00f3digo</p> </li> <li> <p>Push a tu Fork <pre><code>git push origin feature/tu-feature\n</code></pre></p> </li> <li> <p>Crea un Pull Request</p> </li> <li>Ve a tu fork en GitHub</li> <li>Click en \"New Pull Request\"</li> <li>Describe tus cambios</li> <li>Referencia cualquier issue relacionado</li> </ol>"},{"location":"desarrollo/contribuir/#tests","title":"\ud83e\uddea Tests","text":"<p>Antes de enviar tu PR, aseg\u00farate de que:</p> <ol> <li> <p>Todos los tests pasan:    <pre><code>pytest\n</code></pre></p> </li> <li> <p>El c\u00f3digo sigue el estilo del proyecto:    <pre><code>flake8\nblack .\n</code></pre></p> </li> </ol>"},{"location":"desarrollo/contribuir/#checklist-pr","title":"\ud83d\udccb Checklist PR","text":"<ul> <li> He seguido las gu\u00edas de contribuci\u00f3n</li> <li> He a\u00f1adido tests si era necesario</li> <li> He actualizado la documentaci\u00f3n si era necesario</li> <li> He verificado que todos los tests pasan</li> <li> He seguido las convenciones de commit</li> </ul>"},{"location":"desarrollo/contribuir/#reportar-bugs","title":"\ud83d\udc1b Reportar Bugs","text":"<ul> <li>Usa el issue tracker</li> <li>Describe el bug con detalle</li> <li>Incluye pasos para reproducirlo</li> <li>Menciona tu entorno (OS, Python version, etc.)</li> </ul>"},{"location":"desarrollo/contribuir/#proponer-mejoras","title":"\ud83d\udca1 Proponer Mejoras","text":"<ul> <li>Abre un issue describiendo tu propuesta</li> <li>Explica por qu\u00e9 ser\u00eda \u00fatil</li> <li>Discute posibles implementaciones</li> <li>Espera feedback antes de empezar a trabajar</li> </ul>"},{"location":"desarrollo/contribuir/#codigo-de-conducta","title":"\ud83d\udcdc C\u00f3digo de Conducta","text":"<p>Este proyecto sigue el Contributor Covenant. Al participar, se espera que respetes este c\u00f3digo.</p>"},{"location":"desarrollo/estandares/","title":"Est\u00e1ndares de Desarrollo","text":""},{"location":"desarrollo/estandares/#estilo-de-codigo","title":"\ud83d\udcdd Estilo de C\u00f3digo","text":""},{"location":"desarrollo/estandares/#python","title":"Python","text":"<p>Seguimos PEP 8 con algunas modificaciones:</p> <pre><code># Correcto\ndef get_ubicacion_by_id(ubicacion_id: UUID) -&gt; Optional[Ubicacion]:\n    return db.query(Ubicacion).filter(Ubicacion.id == ubicacion_id).first()\n\n# Incorrecto\ndef getUbicacionById(ubicacionId):\n    return db.query(Ubicacion).filter(Ubicacion.id==ubicacionId).first()\n</code></pre>"},{"location":"desarrollo/estandares/#convenciones-de-nombrado","title":"Convenciones de Nombrado","text":"<ul> <li>Variables y funciones: snake_case</li> <li>Clases: PascalCase</li> <li>Constantes: MAY\u00daSCULAS_CON_GUIONES</li> <li>M\u00f3dulos: min\u00fasculas_con_guiones</li> <li>Tipos: PascalCase</li> </ul>"},{"location":"desarrollo/estandares/#arquitectura","title":"\ud83c\udfd7\ufe0f Arquitectura","text":""},{"location":"desarrollo/estandares/#estructura-de-carpetas","title":"Estructura de Carpetas","text":"<pre><code>app/\n\u251c\u2500\u2500 main.py           # Punto de entrada\n\u251c\u2500\u2500 database.py       # Configuraci\u00f3n DB\n\u251c\u2500\u2500 models.py         # Modelos SQLAlchemy\n\u251c\u2500\u2500 schemas.py        # Schemas Pydantic\n\u251c\u2500\u2500 enums.py         # Enumeraciones\n\u2514\u2500\u2500 routes/          # Endpoints API\n    \u2514\u2500\u2500 places.py    # Rutas de ubicaciones\n</code></pre>"},{"location":"desarrollo/estandares/#patrones-de-diseno","title":"Patrones de Dise\u00f1o","text":"<ol> <li> <p>Dependency Injection <pre><code>def get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n</code></pre></p> </li> <li> <p>Repository Pattern <pre><code>class UbicacionRepository:\n    def __init__(self, db: Session):\n        self.db = db\n\n    def get_all(self) -&gt; List[Ubicacion]:\n        return self.db.query(Ubicacion).all()\n</code></pre></p> </li> </ol>"},{"location":"desarrollo/estandares/#testing","title":"\ud83e\uddea Testing","text":""},{"location":"desarrollo/estandares/#estructura-de-tests","title":"Estructura de Tests","text":"<pre><code>tests/\n\u251c\u2500\u2500 conftest.py      # Fixtures compartidos\n\u251c\u2500\u2500 test_api.py      # Tests de API\n\u2514\u2500\u2500 test_models.py   # Tests de modelos\n</code></pre>"},{"location":"desarrollo/estandares/#ejemplo-de-test","title":"Ejemplo de Test","text":"<pre><code>def test_get_ubicaciones(client, db):\n    response = client.get(\"/ubicaciones/\")\n    assert response.status_code == 200\n    assert len(response.json()) &gt; 0\n</code></pre>"},{"location":"desarrollo/estandares/#documentacion","title":"\ud83d\udcda Documentaci\u00f3n","text":""},{"location":"desarrollo/estandares/#docstrings","title":"Docstrings","text":"<p>Usamos el formato Google para docstrings:</p> <pre><code>def get_ubicacion_by_type(type: str) -&gt; List[Ubicacion]:\n    \"\"\"Obtiene ubicaciones filtradas por tipo.\n\n    Args:\n        type (str): Tipo de ubicaci\u00f3n (PRONTO, BENCINERA, etc)\n\n    Returns:\n        List[Ubicacion]: Lista de ubicaciones del tipo especificado\n\n    Raises:\n        ValueError: Si el tipo no es v\u00e1lido\n    \"\"\"\n</code></pre>"},{"location":"desarrollo/estandares/#comentarios","title":"Comentarios","text":"<ul> <li>Usar comentarios para explicar \"por qu\u00e9\", no \"qu\u00e9\"</li> <li>Mantener comentarios actualizados</li> <li>Escribir en espa\u00f1ol por consistencia</li> </ul>"},{"location":"desarrollo/estandares/#seguridad","title":"\ud83d\udd12 Seguridad","text":""},{"location":"desarrollo/estandares/#validacion-de-datos","title":"Validaci\u00f3n de Datos","text":"<pre><code>from pydantic import BaseModel, validator\n\nclass UbicacionCreate(BaseModel):\n    name: str\n    latitude: float\n    longitude: float\n\n    @validator('latitude')\n    def validate_latitude(cls, v):\n        if not -90 &lt;= v &lt;= 90:\n            raise ValueError('Latitud inv\u00e1lida')\n        return v\n</code></pre>"},{"location":"desarrollo/estandares/#manejo-de-errores","title":"Manejo de Errores","text":"<pre><code>from fastapi import HTTPException\n\ndef get_ubicacion(id: UUID):\n    ubicacion = db.get(id)\n    if not ubicacion:\n        raise HTTPException(\n            status_code=404,\n            detail=\"Ubicaci\u00f3n no encontrada\"\n        )\n    return ubicacion\n</code></pre>"},{"location":"desarrollo/estandares/#performance","title":"\ud83d\ude80 Performance","text":"<ul> <li>Usar \u00edndices en la base de datos</li> <li>Implementar cach\u00e9 cuando sea necesario</li> <li>Paginar resultados grandes</li> <li>Optimizar consultas N+1</li> </ul>"},{"location":"guia/configuracion/","title":"Configuraci\u00f3n","text":""},{"location":"guia/configuracion/#variables-de-entorno","title":"Variables de Entorno","text":"<p>La API utiliza las siguientes variables de entorno que puedes configurar:</p> <ul> <li><code>DATABASE_URL</code>: URL de conexi\u00f3n a la base de datos SQLite (por defecto: <code>sqlite:///data/copec.db</code>)</li> <li><code>DEBUG</code>: Modo debug para desarrollo (por defecto: <code>False</code>)</li> <li><code>API_PREFIX</code>: Prefijo para todas las rutas de la API (por defecto: <code>/</code>)</li> <li><code>PORT</code>: Puerto donde se ejecutar\u00e1 la aplicaci\u00f3n (por defecto: <code>8000</code>)</li> </ul>"},{"location":"guia/configuracion/#base-de-datos","title":"Base de Datos","text":""},{"location":"guia/configuracion/#estructura","title":"Estructura","text":"<p>La base de datos SQLite est\u00e1 organizada con las siguientes tablas:</p> <pre><code>CREATE TABLE ubicacion (\n    id UUID PRIMARY KEY,\n    name VARCHAR NOT NULL,\n    description TEXT,\n    type VARCHAR NOT NULL,\n    latitude FLOAT NOT NULL,\n    longitude FLOAT NOT NULL\n);\n</code></pre>"},{"location":"guia/configuracion/#datos-de-ejemplo","title":"Datos de Ejemplo","text":"<p>Puedes cargar datos de ejemplo usando el script proporcionado:</p> <pre><code>python data_ejemplo.py\n</code></pre> <p>Este script crear\u00e1: - 2 ubicaciones tipo Pronto - 2 ubicaciones tipo Bencinera - 2 ubicaciones tipo Servicio - 2 ubicaciones tipo Otro</p>"},{"location":"guia/configuracion/#configuracion-de-cors","title":"Configuraci\u00f3n de CORS","text":"<p>Por defecto, la API permite solicitudes desde cualquier origen. Puedes modificar esto en <code>app/main.py</code>:</p> <pre><code>app.add_middleware(\n    CORSMiddleware,\n    allow_origins=[\"*\"],  # Modificar seg\u00fan necesidades\n    allow_credentials=True,\n    allow_methods=[\"*\"],\n    allow_headers=[\"*\"],\n)\n</code></pre>"},{"location":"guia/configuracion/#logging","title":"Logging","text":"<p>La API utiliza el sistema de logging est\u00e1ndar de Python. La configuraci\u00f3n se puede ajustar en <code>app/main.py</code>:</p> <pre><code>logging.basicConfig(\n    level=logging.INFO,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'\n)\n</code></pre>"},{"location":"guia/endpoints/","title":"Endpoints de la API","text":""},{"location":"guia/endpoints/#estructura-base","title":"Estructura Base","text":"<p>Todos los endpoints retornan ubicaciones con la siguiente estructura:</p> <pre><code>{\n  \"id\": \"uuid\",\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"type\": \"string\",\n  \"latitude\": \"float\",\n  \"longitude\": \"float\"\n}\n</code></pre>"},{"location":"guia/endpoints/#endpoints-disponibles","title":"Endpoints Disponibles","text":""},{"location":"guia/endpoints/#get-ubicaciones","title":"GET /ubicaciones/","text":"<p>Retorna todas las ubicaciones disponibles.</p> <p>Ejemplo de uso: <pre><code>curl http://localhost:8000/ubicaciones/\n</code></pre></p>"},{"location":"guia/endpoints/#get-ubicacionesprontos","title":"GET /ubicaciones/prontos/","text":"<p>Retorna solo las ubicaciones de tipo Pronto.</p> <p>Ejemplo de uso: <pre><code>curl http://localhost:8000/ubicaciones/prontos/\n</code></pre></p>"},{"location":"guia/endpoints/#get-ubicacionesbencineras","title":"GET /ubicaciones/bencineras/","text":"<p>Retorna solo las ubicaciones de tipo Bencinera.</p> <p>Ejemplo de uso: <pre><code>curl http://localhost:8000/ubicaciones/bencineras/\n</code></pre></p>"},{"location":"guia/endpoints/#get-ubicacionesservicios","title":"GET /ubicaciones/servicios/","text":"<p>Retorna solo las ubicaciones de tipo Servicio.</p> <p>Ejemplo de uso: <pre><code>curl http://localhost:8000/ubicaciones/servicios/\n</code></pre></p>"},{"location":"guia/endpoints/#get-ubicacionesotros","title":"GET /ubicaciones/otros/","text":"<p>Retorna las ubicaciones de tipo Otro.</p> <p>Ejemplo de uso: <pre><code>curl http://localhost:8000/ubicaciones/otros/\n</code></pre></p>"},{"location":"guia/endpoints/#paginacion","title":"Paginaci\u00f3n","text":"<p>Todos los endpoints soportan paginaci\u00f3n mediante query parameters:</p> <ul> <li><code>skip</code>: N\u00famero de registros a saltar</li> <li><code>limit</code>: N\u00famero m\u00e1ximo de registros a retornar</li> </ul> <p>Ejemplo: <pre><code>curl http://localhost:8000/ubicaciones/?skip=0&amp;limit=10\n</code></pre></p>"},{"location":"guia/endpoints/#manejo-de-errores","title":"Manejo de Errores","text":"<p>La API utiliza los siguientes c\u00f3digos de estado HTTP:</p> <ul> <li><code>200</code>: \u00c9xito</li> <li><code>404</code>: Recurso no encontrado</li> <li><code>422</code>: Error de validaci\u00f3n</li> <li><code>500</code>: Error interno del servidor</li> </ul> <p>Ejemplo de respuesta de error: <pre><code>{\n  \"detail\": \"Descripci\u00f3n del error\"\n}\n</code></pre></p>"},{"location":"guia/instalacion/","title":"Gu\u00eda de Instalaci\u00f3n","text":""},{"location":"guia/instalacion/#requisitos-previos","title":"Requisitos Previos","text":"<ul> <li>Python 3.8 o superior</li> <li>pip (gestor de paquetes de Python)</li> <li>Git</li> </ul>"},{"location":"guia/instalacion/#pasos-de-instalacion","title":"Pasos de Instalaci\u00f3n","text":""},{"location":"guia/instalacion/#1-clonar-el-repositorio","title":"1. Clonar el Repositorio","text":"<pre><code>git clone https://github.com/tu-usuario/UBI-COPEC.git\ncd UBI-COPEC\n</code></pre>"},{"location":"guia/instalacion/#2-crear-entorno-virtual","title":"2. Crear Entorno Virtual","text":"WindowsLinux/macOS <pre><code>python -m venv env\nenv\\Scripts\\activate\n</code></pre> <pre><code>python -m venv env\nsource env/bin/activate\n</code></pre>"},{"location":"guia/instalacion/#3-instalar-dependencias","title":"3. Instalar Dependencias","text":"<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"guia/instalacion/#4-configurar-base-de-datos","title":"4. Configurar Base de Datos","text":"<pre><code>python data_ejemplo.py\n</code></pre>"},{"location":"guia/instalacion/#5-iniciar-servidor","title":"5. Iniciar Servidor","text":"<pre><code>uvicorn app.main:app --reload\n</code></pre>"},{"location":"guia/instalacion/#verificacion-de-la-instalacion","title":"Verificaci\u00f3n de la Instalaci\u00f3n","text":"<ol> <li>Abre tu navegador y visita: <code>http://localhost:8000/docs</code></li> <li>Deber\u00edas ver la documentaci\u00f3n interactiva de la API</li> <li>Prueba un endpoint, por ejemplo: <code>http://localhost:8000/places/prontos</code></li> </ol>"},{"location":"guia/instalacion/#solucion-de-problemas","title":"Soluci\u00f3n de Problemas","text":""},{"location":"guia/instalacion/#error-no-se-puede-crear-la-base-de-datos","title":"Error: No se puede crear la base de datos","text":"<ul> <li>Verifica que tengas permisos de escritura en el directorio <code>data/</code></li> <li>Aseg\u00farate de que SQLite est\u00e9 instalado en tu sistema</li> </ul>"},{"location":"guia/instalacion/#error-no-se-puede-iniciar-el-servidor","title":"Error: No se puede iniciar el servidor","text":"<ul> <li>Verifica que el puerto 8000 no est\u00e9 en uso</li> <li>Aseg\u00farate de estar en el entorno virtual correcto</li> </ul>"}]}